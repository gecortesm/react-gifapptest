{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAqBA,OAEI,sBAAMC,SAjBW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACtCN,EAAc,MAWlB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SA1Bc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCJlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCFPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEtC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,SCHLO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECHwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAlBAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAK,SAAAC,GAGFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACpB,IAKGqB,EDtB0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OAEI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAElDoB,GAAW,mBAAGJ,UAAU,wCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAIYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEf7BgB,EAAe,WAIxB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAaA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAGQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OAEnB,cAAC,EAAD,CAEGA,SAAWA,GADLA,YC/B5B6B,G,MAAUC,SAASC,cAAc,SACvCC,IAASC,OAAQ,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.2bbdd68d.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ){\r\n\r\n            setCategories(cats => [ inputValue,...cats]);\r\n            setInputValue('');\r\n\r\n        }\r\n\r\n        \r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={ handleSubmit }>\r\n\r\n            <input\r\n                type=\"text\" \r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            \r\n            />\r\n\r\n        </form>\r\n\r\n\r\n            \r\n        \r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=ENZaEqNARJ1ZIIwU9335tuyEj5vqMqhM`;\r\n    const resp = await fetch( url );\r\n    const { data }= await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n    \r\n    // SetImgs\r\n\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n    \r\n    return (\r\n\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading && <p className=\"card animate__animated animate__flash\">Loading</p> }\r\n            \r\n            <div className=\"card-grid\">\r\n                    \r\n                        \r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem \r\n                                key={ img.id } \r\n                                { ...img }\r\n                            />\r\n                        ))\r\n                     }\r\n                        \r\n             </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\n","import  { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifts';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true \r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then(imgs => {\r\n\r\n       \r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false \r\n                })\r\n \r\n            })\r\n\r\n    }, [category] )\r\n\r\n\r\n\r\n\r\n    return state;\r\n\r\n\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n// rafc snipper crear componente\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    \r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    /*\r\n    const handleAdd = () => {\r\n        //setcategories( [...categories , 'Hunter x Hunter']);\r\n        setcategories(cats => [...cats, 'Hunter X Hunter']);\r\n        console.log(categories);\r\n\r\n    } */\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n\r\n           \r\n\r\n            <ol>\r\n\r\n                {\r\n                    categories.map( category   =>\r\n\r\n                         <GifGrid \r\n                            key={ category }\r\n                            category={ category } />\r\n                    )\r\n                    \r\n                }\r\n        \r\n            </ol>\r\n\r\n        </>\r\n        \r\n    )\r\n\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nconst divRoot = document.querySelector('#app');\nReactDOM.render( <GifExpertApp />, divRoot);\n\n\n// GifExpertApp\n//<h2>GifExpertApp</h2>\n//<hr>\n"],"sourceRoot":""}